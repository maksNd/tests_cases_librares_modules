видео - https://www.youtube.com/watch?v=BoazgBZ4D7k&t=1646s

1. Какая самая сложная задача, с которой довелось столкнуться в последний год, каким образом была решена

1. Типы данных в python - изменяемые (list, dict, set), не изменяемые
2. Чем отличается == и is - == сравнивает по значению, is сравнивает по адресу в памяти
    [1, 2, 3] == [1, 2, 3] -> True
    [1, 2, 3] is [1, 2, 3] -> False
3. Как в python передаются аргументы в функцию - либо по значениям(неизменяемые типы),
    либо по ссылкам (изменяемые тиы)

4. Что такое *args и **kwargs
    args - такой аргумент, который принимает неограниченное кол-во позиционных аргументов ф-ии представлен в виде tuple
    kwargs - представлен в виде dict
    args, kwargs - необязательные имена

5. Что такое аннотации типов - typeHints - подсказки к переменнм и ф-иям, для читаемости, для анализа самой IDE
6. Что такое lambda ф-ия
    lambda ф-ия - анонимная ф-ия, может принять неограниченное кол-во переменных и имеет неявный return

7. тернарный оператор - обычный if в одну строку
    my_var = True
    result = 1 if my_var else 0

8. Что такое глубокая и поверхностная копия? зачем нужны? как сделать?
    ПОВЕРХНОСТНАЯ копия внешние объекты копирует в новый адрес памяти а на внутренние объекты сохраняет ссылки
    ГЛУБОКАЯ копия и внешние и внутренние объекты скопирует в новые адреса памяти

9. Что такое виртуальное окружение
    Песочница, которая обособляет выполнения пректа и позволяет проектам не конфликтовать по зависимостям

10. Что такое Poetry? Преимущества над pip (стандартный пакетный менеджер)?
    Poetry - пакетный менеджер с более широким функционалом
    На самом деле poetry - набор инструментов, в том числе для работы с виртуальным окружением

11. Как оценивается сложность алгоритмов и почему? Что такое Big O notation?

12. Что такое хэш таблица? Что такое коллизия?
    Какой метод разрешения коллизий исп-ся в python (метод открытой адресации)?
    https://www.youtube.com/watch?v=0UX4MIfOMEs

    Хэштаблица - структура данных, позволяющая быстро получить инф-ию по ключу, вне зависимости от кол-ва данных

13. Методы разрешения коллизий?
    1. метод открытой адресации, 2. метод цепочек