Урок 1 (Работа в команде, алгоритмы)
Работа в команде
* спринт - отрезок времени для выполнения задач разработчиком
* сколько длится спринт? - 1б 2 недели
* бэклог - список задач, которые не реализованы в текущем спринте (не актуальны)
* пример проверки продуктовой гипотезы??? создание айфона
* Кто в команде отвечает за сбор и обработку данных о поведении пользователей? - аналитик
* Кто в команде отвечает за разработку клиентской части интерфейса? - фронтендер
* Что такое баг? - ошибка в программе

Алгоритмы
* Что такое алгоритм? - последовательность действий (инструкция) для решения конкретной задачи
! Что такое псевдокод? - программа, написанная на человеческом языке
* Что такое блок-схема и какие типы элементов у нее бывают? способ представления программы. начало/конец, ввод/вывод, действие, условие
* пример операции ввода - пользователь вводит пин-код в банкомате
* пример операции вывода - пользователь получает информацию о состоянии счета
* пример условия - если в введенном тексте отсутствует @, то такой текст не считаются электронной почтой
* пример алгоритма с циклом - игра с отгадыванием букв в слове

Урок 2 (Синтаксис, ввод, вывод, условия)
* Что такое переменная? - обозначенная область памяти компьютера для хранения значения в виде определенного типа данных
* Какие типы данных в Python вы знаете? - int, float, str, bool, list, set, dict, tuple, range, byte
* Что такое приведение типов? Приведите пример - перевод данных из одного типа в другой, int(True)
* Как оформляются комментарии в программе? - # comment, """comment"""
* Какие значения может принимать переменная типа bool? - True, False
* Как округлить значение с точкой до целого? Пример: 3.34  - round(), math.ceil(), math.floor()
* Какой тип получится, если поделить целое на целое? Пример: 10/2 - float
* Какой тип получится, если сложить целое с числом с плавающей точкой? - float
* Какой тип данных получится при использовании оператора сравнения типа `4 > 2`? - bool
* Чем отличается elif от if? - elif - еще если
* Чем отличается elif и else? - else - иначе
* Чему равно выражение True and True and False? - False
* Чему равно выражение True or True or False? - True
* Чему равно выражение not not True? - True
* Чему равно выражение not True and not False? - False
* Что такое PEP 8? Приведите пару примеров из правил - правила оформления кода в питоне

Урок 3 (Списки и циклы)
Списки
* Какие типы данных могут лежать в списке? А в одном списке? - любые
* Как добавить элемент в конец списка? - <list>.append(<value>)
* Как добавить элемент в середину списка? - <list>.insert(index, <value>)
* Сколько элементов в списке, если его последний элемент имеет индекс 2? - 3
* Что происходит с индексами списка при удалении элемента? - смещаются
* Как отсортировать список алфавитно по убыванию? - sorted(<list>)[::-1]

Циклы
* Какие типы циклов вы знаете? - for, while
* Как перебрать список, выводя каждый его элемент? - for item in <list>: print(item)
* Как перебрать список, выводя только подходящие по условию элементы? - for item in <list>: if <условие>: print(item)
* Как вывести числа от 1 до 100? - for i in range(1, 101): print(i)
* Как получить у пользователя 10 чисел (по одному) и записать их в список? - for i in range(10): <list>.append(int(input()))
* Как спрашивать у пользователя ввести данные, пока он не введет строку "стоп"? - while True: if ...: break, (while input() != "стоп":)
* Сколько итераций у цикла for i in range(0,3)? - 3
* Что будет, если запустить перебор по пустому списку? - ничего

Урок 4 (Строки и словари)
Строки
* Как получить n-ю букву строки? - <str>[<index>]
* Как перебрать строку по буквам? (Вывести вертикально буквы) - for i in <strinf>: print(i)
* Как посчитать, сколько раз входит подстрока в строку? - <string>.count(<value>)
* Как заменить подстроку в строке? - <string>.replace(<value>, <new_value>)
* Как удалить подстроку из строки? - <string>.replace(<value>, <>)
* Как превратить строку в список, а список — в строку? <string>.split(<value>), <separator>.join(<list>)
* Как изменится строка при вызове метода replace? - оздастся новая строка
* Как получить половину подстроки с помощью слайсов? - <string>[:(len(<string>)) // 2]

Словари
* Как создать словарь с парой 1:one 2:two 3:three и т.д.? - for i in range(0, 101): new_dict[i] = inflect.engine().number_to_words(i)
* Как получить список значений из словаря? - <dict>.keys()
* Как получить список значений из словаря? - <dict>.values()
* Как вывести все пары ключ-значение? - for key, value in <dict>.items(): print(key, value)
* Как отфильтровать часть пар ключ-значение? - for key, value in <dict>.items(): if len(value) == 3: print(key, value)
* Как удалить элемент с  3 из словаря? - del <dict>[<key>]

Урок 5 (Библиотеки и функции)
* Как получить случайное число целое в заданном диапазоне от 20 до 60? random.randint(20, 60)
* Как получить случайную выборку заданной длины из списка? random.choises(<list>, k=<size>)
* Как получить одно случайное значение из списка? random.choise(<list>)
* Как перемешать список? random.shuffle(<list>)

Функции
* Как передать данные в функцию? в скобках (как аргумент)
* Что такое аргумент функции? данные для обработки внутри функции
* Что такое позиционные и именованные аргументы? для позиционных важен порядок, для именованных - необходимо указывать имя
* Как вернуть значение из функции в тело программы? return
! Что такое область видимости? Расскажите, что знаете. Слои читаемости переменных...
! Зачем область видимости нужна? для защиты глобальных переменных, для очистки памяти (сборщик мусора), для разделения программы на функции и классы
* Можно ли вызвать одну функцию изнутри другой? да
* Можно ли описать одну функцию внутри другой? да
* Как определить значение аргумента по умолчанию? (<argument>=<value>)
* Как принять неопределенное количество аргументов? (*args)
* Написать функцию, которая принимает инт, возвращает строку. def num_to_word(num): return nums[num]

Урок 6 (Локальный Python)
Терминал
* Что такое терминал и для чего он используется? встроенная утилита для работы в системе без GUI
* Как создать новую папку в терминале? mkdir <directory_name>
* Как создать файл в терминале? NUL> 1.txt
* Как удалить файл в терминале? del <filename>
* Как запустить Python-файл? python <filename.py>

Файлы (возвращаемся к Python)
* Как открыть файл filename.txt на запись? file = open(<filename>, 'w')
* Как открыть файл на чтение? Добавление? 'r' - чтение, 'a' - добавление
* Для чего нужно закрывать файлы? 1. чтобы не перегружать память. 2. незакрытые файлы могут приводить к багам в программе
* Как прочитать файл построчно? for strin in file.readlines()
* Что такое символ перевода строки? \n
* Как записать в файл список и прочитать его обратно? with open(<filename>, 'w') as file: file.write(str(<list>)) || with open(<filename>, 'r') as file: file.read()
! Как записать в файл словарь и прочитать его обратно? (запись/чтение списка чем-то отличается от записи/чтения словаря?)
* В  программе есть данные пользователей, рекорды, вопросы. Где будете их хранить? в json файле
* Нужно узнать количество слов в файле. Как решите задачу? wit open(<flename>, 'r') as file: print(file.read().count(' '))

Урок 7 (Коллекции и вложенные структуры)
Новые типы данных
* Что такое кортеж? Когда его предпочтительно использовать? неизменяемый список. Когда определенные данные не должны меняться по ходу программы
* Что такое множество? Когда его предпочтительно использовать? неупорядоченная изменяемая последовательность уникальный эл-ов. Использовать для уникализации объектов (использования для методов: пересечение, исключение и т.д.)
* Чем отличается кортеж от списка? список - изменяемый в отличии от кортежа
* Чем отличается множество от списка? список - упорядоченный в отличии от множества
* Как найти уникальные элементы множества, которых нет в другом? <set_1>.differense(<set_2>)

JSON и передача по сети
* Для чего используется формат JSON? для передачи данных по сети
* Как превратить JSON в словарь? Как превратить словарь в JSON? json.load(<filename.json>) || json.dump(<dict>)
* Как получить всё содержимое страницы? with open('saved_html.html', 'wb') as file: file.write(requests.get(<url>))
* Какие статус-коды вы знаете? 200-399 - все ок, 400-599 - все плохо (400-499 - клиентские ошибки, 500-599 - серверные ошибки)
Что означают статус-коды 200, 404, 403, 500? 200 - все ок, 404 - 'Не найден', 403 - 'Запрещено', 500 - 'Внутренняя ошибка сервера'

Урок 8 (Абстракции и объекты)
* Где хранятся переменные во время выполнения программы? в оперативной памяти
* Где выполняются вычисления и исполняются программы? в CPU, GPU
* Где хранятся файлы, когда устройство отключено? в постоянной памяти

* Что такое система счисления? Какие вы знаете? способ предстовления числовой информации, двоичная, троичная, десятиеричная, шестнадцатиричная
* Сколько бит в одном байте, килобайте? 8, 1000

* В каком формате хранятся в памяти числа, тексты, цвета? в битах, байтах
* Числа. 00100000 — это сколько в десятичной системе? 32

* Символы. Какой 32-й символ в UTF? робел
* Символы. Почему при поиске большие и маленькие буквы — это разные символы? потому что существуют разные регистры
* Символы. Какие кодировки вы знаете? utf-8, ASCII, unicode, 1251
! Символы. Сколько байт требуется под 1 символ? от одного байта (по разному в разных кодировках)
* Цвета. #0000FF — это какой цвет? синий
! Цвета. В каком формате хранятся картинки? .jpeg .png

! Что такое адреса? Что возвращает функция id() ? номер ячейки памяти
! Как хранятся списки и словари в Python?
Что такое хешируемый тип данных? (Этого вопроса не было в курсе!)
Что такое протокол передачи данных? Правила структуризации информации и порядок передачи данных
Что такое IP-адрес? Уникальный 4-битный (IPv4) номер клиента в конкретной сети
Что такое DNS и как она работает? система доменных имен, основная ф-ия - преобразовать доменное имя в IP адресс
Что такое домен? Какие у них бывают уровни? корневой домен, 1, 2, 3 уровни
Что такое пакет? набор определенных файлов с функциями для решения определенного ряда задач